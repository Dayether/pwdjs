RewriteEngine On

# 1. Canonical redirect: any direct *.php request -> extensionless
#    Do NOT redirect POST requests (to avoid losing method/body) and skip API endpoints
RewriteCond %{THE_REQUEST} \s/+[^\s]*?(.+?)\.php[\s?] [NC]
RewriteCond %{REQUEST_METHOD} !POST
RewriteCond %{REQUEST_URI} !/api_ [NC]
RewriteRule ^(.+?)\.php$ $1 [R=301,L,NE]

# 2. Block path-info after .php (e.g., file.php/extra) by redirecting to clean
#    Do NOT redirect POST requests and skip API endpoints
RewriteCond %{THE_REQUEST} \s/+[^\s]*?(.+?)\.php/ [NC]
RewriteCond %{REQUEST_METHOD} !POST
RewriteCond %{REQUEST_URI} !/api_ [NC]
RewriteRule ^(.+?)\.php/ $1 [R=301,L,NE]

# 3. Allow direct access to static assets / uploads before other rewrites
RewriteRule ^(assets/|uploads/|PHPMailer/|favicon\.ico) - [L]

# 4. Short-circuit for existing files/dirs (except we already handled direct .php above)
RewriteCond %{REQUEST_FILENAME} -f [OR]
RewriteCond %{REQUEST_FILENAME} -d [OR]
RewriteCond %{REQUEST_FILENAME} -l
RewriteRule ^ - [L]

# 5. Internal rewrite: extensionless -> corresponding .php if it exists (in current directory)
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME}.php -f
RewriteRule ^(.+?)/?$ $1.php [L,QSA]

# 6. Security: disallow direct web access to migrations directory
RewriteRule ^config/migrations/ - [F]

# 7. Optional custom 404 handler (uncomment and create file if desired)
# ErrorDocument 404 /404
